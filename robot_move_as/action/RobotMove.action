# goal definition
int8 type								# type of action
int8 predfinedPoseCode
int32 planID	# plan id for searching exist plan from oracle, 
                #to avoid duplicate planning work, not implemented
inventory_msgs/Part sourcePart				# part to pick
inventory_msgs/Part targetPart				# fake part message to place the part
float64[] jointsValue					# new joint value to be published
float64 timeout						 	# time limit for perform any move action, timeout <=0 means no limit

# type list
int8 NONE						= 0	 	# unused
int8 CONVEYOR_FETCH					= 9     # specialized to grab a part from conveyor
int8 PICK						= 10	# input: planID, sourcePart (from), timeout; output: success, errorCode, robotState
int8 PLACE						= 11	# input: planID, targetPart (to), timeout; output: success, errorCode, robotState
int8 MOVE						= 12	# input: planID, sourcePart (from), targetPart (to), timeout; output: success, errorCode, robotState
int8 TO_HOME					= 13	# input: timeout; output: success, errorCode, robotState
int8 SET_JOINT_VALUE	= 15	# input: jointsValue, timeout; output: success, errorCode, robotState
int8 GET_ROBOT_STATE	= 16	# input: (none); output: success, robotState
int8 GRASP		= 17	# input: timeout; output: success, errorCode
int8 RELEASE		= 18	# input: timeout; output: success, errorCode
int8 IS_ATTACHED	= 19	# input: (none); output: success (true means attached)
int8 TO_PREDEFINED_POSE  = 20    # input: predfinedPoseCode, timeout; output: success, errorCode
int8 FLIP_PART		= 21     # part-flipper code
int8 PLACE_PART_NO_RELEASE = 22
int8 DISCARD_GRASPED_PART_Q1 = 23
int8 DISCARD_GRASPED_PART_Q2 = 24
int8 RELEASE_PLACED_PART = 25
int8 TO_CRUISE_POSE = 26
int8 TEST_IS_PICKABLE = 27
int8 TEST_IS_PLACEABLE = 28

# predefined move codes
int8 INIT_POSE                        =3
int8 BIN8_HOVER_POSE                   =4
int8 BIN8_RETRACT_POSE                   =5
int8 BIN8_CRUISE_POSE                   =6
int8 BIN7_HOVER_POSE                   =7
int8 BIN7_RETRACT_POSE                   =8
int8 BIN7_CRUISE_POSE                   =9
int8 BIN6_HOVER_POSE                   =10
int8 BIN6_RETRACT_POSE                   =11
int8 BIN6_CRUISE_POSE                   =12
int8 BIN5_HOVER_POSE                   =13
int8 BIN5_RETRACT_POSE                   =14
int8 BIN5_CRUISE_POSE                   =15
int8 BIN4_HOVER_POSE                   =16
int8 BIN4_RETRACT_POSE                   =17
int8 BIN4_CRUISE_POSE                   =18
int8 BIN3_HOVER_POSE                   =19
int8 BIN3_RETRACT_POSE                   =20
int8 BIN3_CRUISE_POSE                   =21
int8 BIN2_HOVER_POSE                   =22
int8 BIN2_RETRACT_POSE                   =23
int8 BIN2_CRUISE_POSE                   =24
int8 BIN1_HOVER_POSE                   =25
int8 BIN1_RETRACT_POSE                   =26
int8 BIN1_CRUISE_POSE                   =27
int8 QUAL_SENSOR_1_CRUISE_POSE          =28
int8 QUAL_SENSOR_1_HOVER_POSE           =29
int8 QUAL_SENSOR_1_DISCARD_POSE           =30
int8 QUAL_SENSOR_2_CRUISE_POSE          =31
int8 QUAL_SENSOR_2_HOVER_POSE           =32
int8 QUAL_SENSOR_2_DISCARD_POSE           =33

---
# result definition
bool success			# success or bool result, if success, errorCode will be ignored
int8 errorCode							# reason of fault, specified below
robot_move_as/RobotState robotState        # robot state after finish execute current command

# ERROR CODE
int8 NO_ERROR			= 0	# default
int8 CANCELLED		    = 100	# goal canceled
int8 WRONG_PARAMETER	= 101		# type not in list or Part message have error
int8 TIMEOUT			= 102	# out of time limit
int8 UNREACHABLE		= 103   # pose unreachable
int8 GRIPPER_FAULT		= 104	# when gripper failed to attach or detach object
int8 COLLISION			= 105	# when robot hits anything
int8 PART_DROPPED		= 106	# part dropped in the middle, return immediately with RobotState, a replanning will be performed
---
# feedback
robot_move_as/RobotState robotState        # current robot state when performing any action

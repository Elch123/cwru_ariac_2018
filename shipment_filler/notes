shipment_filler:
could get quite large;
need to:

Init:
*get a box into position...
   start conveyor
   stop when box under camera;
   get box pose
*request a shipment from order_manager
 if no order, take brief sleep

*step through parts within shipment and:
  get coords/loc_code for i'th part (if available)
  compute world coords for destination
  attempt part transfer
  fix if dropped  part
 repeat for all parts

*inspect parts
  turn on conveyor to advance box under inspector
  replace any bad parts

*advance to second inspection station (place logical camera by inspection cam?)
  may need to block new boxes from advancing past first camera
  stop conveyor
  replace any bad parts

*eval/adjust part locations
  for each part, compare location in box to desired location
  make fine/fast adjustments, as necessary

*report shipment done (to order manager)

*advance box to drone dock

*call drone

---fake shipment filler:
*request shipment
*report shipment done

$ rosservice call /ariac/conveyor/control "power: 100"


need to add callback for box_camera1
 then move conveyor until "shipping_box" y>0 (in cam frame)

----
rosrun shipment_filler shipment_filler
timing:  box not yet to box_cam1
         box under box_cam2
         box beyond box_cam3
         box delivered to drone




